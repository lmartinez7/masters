ebola[1:200]
#2
count(ebola,1,freq=T)
barplot(count(ebola,1,freq=T))
#3
GC(ebola)
1-GC(ebola)
#4
n <- length(ebola)
m <- 200
k <- n%/%m
gcc <- numeric(k)
for (i in 1:k){
a<-(i-1)*m+1; b <- a+m-1
gcc[i] <- GC(ebola[a:b])
}
hist(gcc)
ts.plot(gcc)
#5
probs <- c(count(ebola,1,freq=T))
sample(c("A","C","G","T"), 1000, replace=T, prob=probs)
#6
dinuc_f <- count(ebola,2,freq=T)
rho(ebola)
scores <- zscore(ebola, modele="base")
scores < -2
scores > 2
####################2
library(seqinr)
x <- c("c", "a", "g", "g", "c", "g", "g", "g", "a", "t", "t", "t", "c", "t", "c", "t", "t", "g", "t", "t", "g", "a", "c", "a", "t", "g", "a", "a", "t", "c", "c")
ebola <- read.fasta(file="/home/xoel/github/masters/module_ii/stochastic_processes/evola.fasta")
ebola <- ebola[[1]]
ae=count(ebola,2)
ce = matrix(ae, 4, 4, byrow=TRUE, dimnames = list(c("a","c","g","t"),c("a","c","g","t")))
tranebola=ce[,]/(ce[,1]+ce[,2]+ce[,3]+ce[,4])
hepat <- read.fasta(file="/home/xoel/github/masters/module_ii/stochastic_processes/hepat.fasta")
hepat <- hepat[[1]]
ah=count(hepat,2)
ch = matrix(ah, 4, 4, byrow=TRUE, dimnames = list(c("a","c","g","t"),c("a","c","g","t")))
tranhepat=ch[,]/(ch[,1]+ch[,2]+ch[,3]+ch[,4])
n=length(x); s=0
for(i in 1:(n-1)){s=s+log(tranebola[x[i],x[i+1]]/tranhepat[x[i],x[i+1]])}
s
setwd("/home/xoel/github/masters/module_ii/stochastic_processes/"")
#1
ebola <- read.fasta(file="/home/masterbio/Escritorio/Xoel/git/masters/module_ii/stochastic_processes/evola.fasta")
ebola <- ebola[[1]]
ebola[1:200]
#2
count(ebola,1,freq=T)
barplot(count(ebola,1,freq=T))
#3
GC(ebola)
1-GC(ebola)
#4
n <- length(ebola)
m <- 200
k <- n%/%m
gcc <- numeric(k)
for (i in 1:k){
a<-(i-1)*m+1; b <- a+m-1
gcc[i] <- GC(ebola[a:b])
}
hist(gcc)
ts.plot(gcc)
#5
probs <- c(count(ebola,1,freq=T))
sample(c("A","C","G","T"), 1000, replace=T, prob=probs)
#6
dinuc_f <- count(ebola,2,freq=T)
rho(ebola)
scores <- zscore(ebola, modele="base")
scores < -2
scores > 2
####################2
library(seqinr)
x <- c("c", "a", "g", "g", "c", "g", "g", "g", "a", "t", "t", "t", "c", "t", "c", "t", "t", "g", "t", "t", "g", "a", "c", "a", "t", "g", "a", "a", "t", "c", "c")
ebola <- read.fasta(file="/home/xoel/github/masters/module_ii/stochastic_processes/evola.fasta")
ebola <- ebola[[1]]
ae=count(ebola,2)
ce = matrix(ae, 4, 4, byrow=TRUE, dimnames = list(c("a","c","g","t"),c("a","c","g","t")))
tranebola=ce[,]/(ce[,1]+ce[,2]+ce[,3]+ce[,4])
hepat <- read.fasta(file="/home/xoel/github/masters/module_ii/stochastic_processes/hepat.fasta")
hepat <- hepat[[1]]
ah=count(hepat,2)
ch = matrix(ah, 4, 4, byrow=TRUE, dimnames = list(c("a","c","g","t"),c("a","c","g","t")))
tranhepat=ch[,]/(ch[,1]+ch[,2]+ch[,3]+ch[,4])
n=length(x); s=0
for(i in 1:(n-1)){s=s+log(tranebola[x[i],x[i+1]]/tranhepat[x[i],x[i+1]])}
s
setwd("/home/xoel/github/masters/module_ii/stochastic_processes/"")
#1
ebola <- read.fasta(file="/home/masterbio/Escritorio/Xoel/git/masters/module_ii/stochastic_processes/evola.fasta")
ebola <- ebola[[1]]
ebola[1:200]
#2
count(ebola,1,freq=T)
barplot(count(ebola,1,freq=T))
#3
GC(ebola)
1-GC(ebola)
#4
n <- length(ebola)
m <- 200
k <- n%/%m
gcc <- numeric(k)
for (i in 1:k){
a<-(i-1)*m+1; b <- a+m-1
gcc[i] <- GC(ebola[a:b])
}
hist(gcc)
ts.plot(gcc)
#5
probs <- c(count(ebola,1,freq=T))
sample(c("A","C","G","T"), 1000, replace=T, prob=probs)
#6
dinuc_f <- count(ebola,2,freq=T)
rho(ebola)
scores <- zscore(ebola, modele="base")
scores < -2
scores > 2
####################2
library(seqinr)
x <- c("c", "a", "g", "g", "c", "g", "g", "g", "a", "t", "t", "t", "c", "t", "c", "t", "t", "g", "t", "t", "g", "a", "c", "a", "t", "g", "a", "a", "t", "c", "c")
ebola <- read.fasta(file="/home/xoel/github/masters/module_ii/stochastic_processes/evola.fasta")
ebola <- ebola[[1]]
ae=count(ebola,2)
ce = matrix(ae, 4, 4, byrow=TRUE, dimnames = list(c("a","c","g","t"),c("a","c","g","t")))
tranebola=ce[,]/(ce[,1]+ce[,2]+ce[,3]+ce[,4])
hepat <- read.fasta(file="/home/xoel/github/masters/module_ii/stochastic_processes/hepat.fasta")
hepat <- hepat[[1]]
ah=count(hepat,2)
ch = matrix(ah, 4, 4, byrow=TRUE, dimnames = list(c("a","c","g","t"),c("a","c","g","t")))
tranhepat=ch[,]/(ch[,1]+ch[,2]+ch[,3]+ch[,4])
n=length(x); s=0
for(i in 1:(n-1)){s=s+log(tranebola[x[i],x[i+1]]/tranhepat[x[i],x[i+1]])}
s
setwd("/home/xoel/github/masters/module_ii/stochastic_processes/"")
#1
ebola <- read.fasta(file="/home/masterbio/Escritorio/Xoel/git/masters/module_ii/stochastic_processes/evola.fasta")
ebola <- ebola[[1]]
ebola[1:200]
#2
count(ebola,1,freq=T)
barplot(count(ebola,1,freq=T))
#3
GC(ebola)
1-GC(ebola)
#4
n <- length(ebola)
m <- 200
k <- n%/%m
gcc <- numeric(k)
for (i in 1:k){
a<-(i-1)*m+1; b <- a+m-1
gcc[i] <- GC(ebola[a:b])
}
hist(gcc)
ts.plot(gcc)
#5
probs <- c(count(ebola,1,freq=T))
sample(c("A","C","G","T"), 1000, replace=T, prob=probs)
#6
dinuc_f <- count(ebola,2,freq=T)
rho(ebola)
scores <- zscore(ebola, modele="base")
scores < -2
scores > 2
####################2
library(seqinr)
x <- c("c", "a", "g", "g", "c", "g", "g", "g", "a", "t", "t", "t", "c", "t", "c", "t", "t", "g", "t", "t", "g", "a", "c", "a", "t", "g", "a", "a", "t", "c", "c")
ebola <- read.fasta(file="/home/xoel/github/masters/module_ii/stochastic_processes/evola.fasta")
ebola <- ebola[[1]]
ae=count(ebola,2)
ce = matrix(ae, 4, 4, byrow=TRUE, dimnames = list(c("a","c","g","t"),c("a","c","g","t")))
tranebola=ce[,]/(ce[,1]+ce[,2]+ce[,3]+ce[,4])
hepat <- read.fasta(file="/home/xoel/github/masters/module_ii/stochastic_processes/hepat.fasta")
hepat <- hepat[[1]]
ah=count(hepat,2)
ch = matrix(ah, 4, 4, byrow=TRUE, dimnames = list(c("a","c","g","t"),c("a","c","g","t")))
tranhepat=ch[,]/(ch[,1]+ch[,2]+ch[,3]+ch[,4])
n=length(x); s=0
for(i in 1:(n-1)){s=s+log(tranebola[x[i],x[i+1]]/tranhepat[x[i],x[i+1]])}
s
setwd("/home/xoel/github/masters/module_ii/stochastic_processes/)
#1
ebola <- read.fasta(file="/home/masterbio/Escritorio/Xoel/git/masters/module_ii/stochastic_processes/evola.fasta")
ebola <- ebola[[1]]
ebola[1:200]
#2
count(ebola,1,freq=T)
barplot(count(ebola,1,freq=T))
#3
GC(ebola)
1-GC(ebola)
#4
n <- length(ebola)
m <- 200
k <- n%/%m
gcc <- numeric(k)
for (i in 1:k){
a<-(i-1)*m+1; b <- a+m-1
gcc[i] <- GC(ebola[a:b])
}
hist(gcc)
ts.plot(gcc)
#5
probs <- c(count(ebola,1,freq=T))
sample(c("A","C","G","T"), 1000, replace=T, prob=probs)
#6
dinuc_f <- count(ebola,2,freq=T)
rho(ebola)
scores <- zscore(ebola, modele="base")
scores < -2
scores > 2
####################2
library(seqinr)
x <- c("c", "a", "g", "g", "c", "g", "g", "g", "a", "t", "t", "t", "c", "t", "c", "t", "t", "g", "t", "t", "g", "a", "c", "a", "t", "g", "a", "a", "t", "c", "c")
ebola <- read.fasta(file="/home/xoel/github/masters/module_ii/stochastic_processes/evola.fasta")
ebola <- ebola[[1]]
ae=count(ebola,2)
ce = matrix(ae, 4, 4, byrow=TRUE, dimnames = list(c("a","c","g","t"),c("a","c","g","t")))
tranebola=ce[,]/(ce[,1]+ce[,2]+ce[,3]+ce[,4])
hepat <- read.fasta(file="/home/xoel/github/masters/module_ii/stochastic_processes/hepat.fasta")
hepat <- hepat[[1]]
ah=count(hepat,2)
ch = matrix(ah, 4, 4, byrow=TRUE, dimnames = list(c("a","c","g","t"),c("a","c","g","t")))
tranhepat=ch[,]/(ch[,1]+ch[,2]+ch[,3]+ch[,4])
n=length(x); s=0
for(i in 1:(n-1)){s=s+log(tranebola[x[i],x[i+1]]/tranhepat[x[i],x[i+1]])}
s
#1
ebola <- read.fasta(file="./evola.fasta")
setwd("/home/xoel/github/masters/module_ii/stochastic_processes/")
#1
ebola <- read.fasta(file="./evola.fasta")
ebola <- ebola[[1]]
ebola[1:200]
#2
count(ebola,1,freq=T)
barplot(count(ebola,1,freq=T))
#3
GC(ebola)
1-GC(ebola)
#4
n <- length(ebola)
m <- 200
k <- n%/%m
gcc <- numeric(k)
for (i in 1:k){
a<-(i-1)*m+1; b <- a+m-1
gcc[i] <- GC(ebola[a:b])
}
hist(gcc)
ts.plot(gcc)
#5
probs <- c(count(ebola,1,freq=T))
sample(c("A","C","G","T"), 1000, replace=T, prob=probs)
#6
dinuc_f <- count(ebola,2,freq=T)
rho(ebola)
scores <- zscore(ebola, modele="base")
scores < -2
scores > 2
library(seqinr)
setwd("/home/xoel/github/masters/module_ii/stochastic_processes/")
#1 ZIKA
zika <- read.fasta(file="./zika.fasta")
zika <- zika[[1]]
#2
count(zika,1,freq=T)
barplot(count(zika,1,freq=T))
#3
GCzika <- GC(zika)
ATzika <- 1-GC(zika)
#4
nzika <- length(zika)
mzika <- 200
kzika <- nzika%/%mzika
gcczika <- numeric(kzika)
for (i in 1:kzika){
a<-(i-1)*mzika+1; b <- a+mzika-1
gcczika[i] <- GCzika(zika[a:b])
}
for (i in 1:kzika){
a<-(i-1)*mzika+1; b <- a+mzika-1
gcczika[i] <- GC(zika[a:b])
}
hist(gcczika)
ts.plot(gcczika)
#6
dinuc_f <- count(zika,2,freq=T)
rho(zika)
scores <- zscore(zika, modele="base")
scores < -2
scores > 2
#6
dinuc_f <- count(dengue,2,freq=T)
rho(dengue)
scores <- zscore(dengue, modele="base")
scores < -2
scores > 2
rho(zika)["gc"]
#9 Sliding window of GC overrepresentation
nzika <- length(zika)
mzika <- 200
kzika <- nzika%/%mzika
gcczika <- numeric(kzika)
for (i in 1:kzika){
a<-(i-1)*mzika+1; b <- a+mzika-1
rhozika[i] <- rho(zika[a:b])["gc"]
}
#9 Sliding window of GC overrepresentation
nzika <- length(zika)
mzika <- 200
kzika <- nzika%/%mzika
rhozika <- numeric(kzika)
for (i in 1:kzika){
a<-(i-1)*mzika+1; b <- a+mzika-1
rhozika[i] <- rho(zika[a:b])["gc"]
}
hist(rhozika)
ts.plot(rhozika)
#9 Sliding window of GC overrepresentation
nzika <- length(zika)
mszika <- c(50,100,200,400,800)
kzika <- nzika%/%mzika
rhozika <- numeric(kzika)
for mzika in mszika{
for (i in 1:kzika){
a<-(i-1)*mzika+1; b <- a+mzika-1
rhozika[i] <- rho(zika[a:b])["gc"]
}
}
for (i in 1:kzika){
a<-(i-1)*mzika+1; b <- a+mzika-1
rhozika[i] <- rho(zika[a:b])["gc"]
}
for mzika in mszika{
for (i in 1:kzika){
a<-(i-1)*mzika+1; b <- a+mzika-1
rhozika[i] <- rho(zika[a:b])["gc"]
}
}
for mzika in mszika{
for (i in 1:kzika){
a<-(i-1)*mzika+1; b <- a+mzika-1
rhozika[i] <- rho(zika[a:b])["gc"]
}
}
for (mzika in mszika){
for (i in 1:kzika){
a<-(i-1)*mzika+1; b <- a+mzika-1
rhozika[i] <- rho(zika[a:b])["gc"]
}
}
hist(rhozika)
ts.plot(rhozika)
###DENGUE
library(seqinr)
setwd("./dengue.fasta")
for (mzika in mszika){
for (i in 1:kzika){
a<-(i-1)*mzika+1; b <- a+mzika-1
rhozika[i] <- rho(zika[a:b])["gc"]
}
hist(rhozika)
ts.plot(rhozika)
}
for (mzika in mszika){
for (i in 1:kzika){
a<-(i-1)*mzika+1; b <- a+mzika-1
rhozika[i] <- rho(zika[a:b])["gc"]
}
jpeg(paste(mzika,"plotrhocgzika.jpg")), width = 350, height = "350"))
hist(rhozika)
dev.off()
}
for (mzika in mszika){
for (i in 1:kzika){
a<-(i-1)*mzika+1; b <- a+mzika-1
rhozika[i] <- rho(zika[a:b])["gc"]
}
jpeg(paste(mzika,"plotrhocgzika.jpg")), width = 350, height = "350")
hist(rhozika)
dev.off()
}
for (mzika in mszika){
for (i in 1:kzika){
a<-(i-1)*mzika+1; b <- a+mzika-1
rhozika[i] <- rho(zika[a:b])["gc"]
}
jpeg(paste(mzika,"rhocg_zika.jpg")), width = 350, height = "350")
hist(rhozika)
dev.off()
}
for (mzika in mszika){
for (i in 1:kzika){
a<-(i-1)*mzika+1; b <- a+mzika-1
rhozika[i] <- rho(zika[a:b])["gc"]
}
jpeg(paste(mzika,"rhocg_zika.jpg"))
hist(rhozika)
dev.off()
}
for (mzika in mszika){
for (i in 1:kzika){
a<-(i-1)*mzika+1; b <- a+mzika-1
rhozika[i] <- rho(zika[a:b])["gc"]
}
jpeg(paste(mzika,"rhocg_zika.jpg"))
ts.plot(rhozika)
dev.off()
}
#9 Sliding window of GC overrepresentation
nzika <- length(zika)
mszika <- c(50,100,200,400,800)
kzika <- c(nzika%/%mzika)
rhozika <- numeric(kzika)
for (mzika in mszika){
for (i in 1:kzika){
a<-(i-1)*mzika+1; b <- a+mzika-1
rhozika[i] <- rho(zika[a:b])["gc"]
}
jpeg(paste(mzika,"rhocg_zika.jpg"))
ts.plot(rhozika, main=paste("rho(GC) Window:", mzika))
dev.off()
}
kzika <- c(nzika/mzika)
#9 Sliding window of GC overrepresentation
nzika <- length(zika)
mszika <- c(50,100,200,400,800)
for (mzika in mszika){
kzika <- nzika%/%mzika
rhozika <- numeric(kzika)
for (i in 1:kzika){
a<-(i-1)*mzika+1; b <- a+mzika-1
rhozika[i] <- rho(zika[a:b])["gc"]
}
jpeg(paste(mzika,"rhocg_zika.jpg"))
ts.plot(rhozika, main=paste("rho(GC) Window:", mzika))
dev.off()
}
###DENGUE
library(seqinr)
#9 Sliding window of GC overrepresentation
nzika <- length(zika)
mszika <- c(50,100,200,400,800)
for (mzika in mszika){
kzika <- nzika%/%mzika
rhozika <- numeric(kzika)
for (i in 1:kzika){
a<-(i-1)*mzika+1; b <- a+mzika-1
rhozika[i] <- rho(zika[a:b])["gc"]
}
jpeg(paste(mzika,"rhocg_zika.jpg"))
ts.plot(rhozika, main=paste("rho(GC) Window:", mzika), ylim=c(-2.5,2.5))
dev.off()
}
###DENGUE
library(seqinr)
setwd("./dengue.fasta")
for (mzika in mszika){
kzika <- nzika%/%mzika
rhozika <- numeric(kzika)
for (i in 1:kzika){
a<-(i-1)*mzika+1; b <- a+mzika-1
rhozika[i] <- rho(zika[a:b])["gc"]
}
jpeg(paste(mzika,"rhocg_zika.jpg"))
ts.plot(rhozika, main=paste("rho(GC) Window:", mzika), ylim=c(0,2))
dev.off()
}
###DENGUE
library(seqinr)
for (mzika in mszika){
kzika <- nzika%/%mzika
rhozika <- numeric(kzika)
for (i in 1:kzika){
a<-(i-1)*mzika+1; b <- a+mzika-1
rhozika[i] <- rho(zika[a:b])["gc"]
}
jpeg(paste(mzika,"rhocg_zika.jpg"))
ts.plot(rhozika, main=paste("Window:", mzika), ylim=c(0,2), ylab="rho(GC)", xlab="# Window")
dev.off()
}
#9 Sliding window of GC overrepresentation
ndengue <- length(dengue)
mszika <- c(50,100,200,400,800)
for (mdengue in msdengue){
kdengue <- ndengue%/%mdengue
rhodengue <- numeric(kdengue)
for (i in 1:kdengue){
a<-(i-1)*mdengue+1; b <- a+mdengue-1
rhodengue[i] <- rho(dengue[a:b])["gc"]
}
jpeg(paste(mdengue,"rhocg_dengue.jpg"))
ts.plot(rhodengue, main=paste("Window:", mdengue), ylim=c(0,2), ylab="rho(GC)", xlab="# Window")
dev.off()
}
msdengue <- c(50,100,200,400,800)
for (mdengue in msdengue){
kdengue <- ndengue%/%mdengue
rhodengue <- numeric(kdengue)
for (i in 1:kdengue){
a<-(i-1)*mdengue+1; b <- a+mdengue-1
rhodengue[i] <- rho(dengue[a:b])["gc"]
}
jpeg(paste(mdengue,"rhocg_dengue.jpg"))
ts.plot(rhodengue, main=paste("Window:", mdengue), ylim=c(0,2), ylab="rho(GC)", xlab="# Window")
dev.off()
}
